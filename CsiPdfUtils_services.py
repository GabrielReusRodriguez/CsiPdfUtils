##################################################
# CsiPdfUtils_services.py
# generated by ZSI.generate.wsdl2python
##################################################


from CsiPdfUtils_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class PdfMerge_ServiceLocator:
    PdfMerge_PortType_address = "http://172.28.105.55:8080"
    def getPdfMerge_PortTypeAddress(self):
        return PdfMerge_ServiceLocator.PdfMerge_PortType_address
    def getPdfMerge_PortType(self, url=None, **kw):
        return PdfMerge_BindingSOAP(url or PdfMerge_ServiceLocator.PdfMerge_PortType_address, **kw)

# Methods
class PdfMerge_BindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: merge2Pdfs
    def merge2Pdfs(self, request):
        if isinstance(request, PdfMergeRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://PdfUtils.csi.org/merge2Pdfs", **kw)
        # no output wsaction
        response = self.binding.Receive(PdfMergeResponse.typecode)
        return response

PdfMergeRequest = ns0.PdfMergeRequest_Def("PdfMergeRequest").pyclass

PdfMergeResponse = ns0.PdfMergeResponse_Def("PdfMergeResponse").pyclass
